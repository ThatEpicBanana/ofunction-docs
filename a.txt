//maybe add some entity stack in the game which holds a list of the uuids of all the entities that have run it

object general Object:
	abstract data

	abstract void kill()


//superclass of all entities
object entity @e Entity:
	data entity @s  compound data

	void kill():
		$kill @s$

	

//should data paths reference the final path or the root path?
object entity @e[type=armor_stand] Raycaster:
	data entity @s ArmorItems[0].tag compound root
	data entity @s &this.root->origin Origin origin

	score entity @s dummy distance = 0
	score entity @s dummy max
	score entity @s dummy stepSize

	//constructors will instead replace every @s that would be created with the entity or block that is being created
	//they will do this not by replacing the occurences, but by using the execute command
	//this can be optimized by only using the execute command when needed
	//a runner variable will then need to be created to actually use an @s in this situation
	//the "runner" variable is not final
	Raycaster(score dummy max, score dummy stepSize, data compound Rotation):
		this.max = max
		this.stepSize = stepSize
		this.data.Rotation = Rotation

		this.data.Tags.append("raycast")
		this.origin = new Origin(runner)
		

	//stepSize is represented in 16ths of a block
	//scores are used as in and out
	void raycast():	
		for(int i = 0; i < 16; i++):
			this.distance += 1

			if(this.distance > this.max)
				distanceOver()

			if(i % this.stepSize == 0)
				score general hit = execute.positioned(^ ^ ^i*0.0625).run(this.check())
				if(hit > 0):
					hitObject()

	abstract void distanceOver()
	abstract void hitObject()

	abstract score general check()
	
object entity @e[type=armor_stand] GoalRaycaster extends Raycaster:
	//idk about this syntax
	data entity @s &this.root->goal Goal goal

	OriginRaycaster(score dummy max, score dummy stepSize, data Goal goal):
		super(max, stepSize)
		this.goal = goal

	score general check():
		tag.add(origin, "currentOrigin")
		return check.entity(@e[tag=currentOrigin,distance=..1]))

	void distanceOver:
		origin.raycasterDeath()
		this.kill()

object entity @e[type=armor_stand] Goal:
	data entity @s ArmorItems[0].tag compound root

	Goal(score dummy maxLength, score dummy stepSize):
		//this is when i wonder if i should make it curly bracket
		execute.as(@a[distance=..maxLength]).at(@s).run(() -> {})


	

need to add some command modifier functions
the entity library maybe could be included in this/

if you add java-like paths (com.mojang.minecraft.nbt etc) then they could be viewed as the paths in functions (thatepicbanana.place.command etc to thatepicbanana:place/command)
 - import thatepicbanana:general/uuid/getuuid
 - copy everything from python including the init stuff

find a way to include normal mcfunction files in these modules